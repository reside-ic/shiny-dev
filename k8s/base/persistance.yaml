# todo: storage capacity as per requirements
# todo: Switch out for longhorn if local does not work
# storage class
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: local-storage
# provisioner: kubernetes.io/no-provisioner
# volumeBindingMode: WaitForFirstConsumer
# ---
# shiny apps
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: shiny-apps-pv
# spec:
#   storageClassName: local-storage
#   capacity:
#     storage: 10Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Retain
#   local:
#     path: /shiny/apps
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: kubernetes.io/hostname
#           operator: In
#           values:
#           - kind-control-plane # update this to the node name
# ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-path-pvc
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
# ---
# # shiny logs
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: shiny-logs-pv
# spec:
#   storageClassName: local-storage
#   capacity:
#     storage: 2Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Retain
#   local:
#     path: /shiny/logs
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: kubernetes.io/hostname
#           operator: In
#           values:
#           - kind-control-plane # update this to the node you want to use
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: shiny-logs-pvc
# spec:
#   storageClassName: local-storage
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 2Gi
# ---
